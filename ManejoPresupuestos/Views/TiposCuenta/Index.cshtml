@model IEnumerable<TipoCuentaViewModel>
@{
    ViewData["Title"] = "Tipos Cuentas";
}

<div class="row">
    <div class="col-md-10 offset-md-1 by-10 habilidades" id="IndexTipoDeCuenta">

        <div class="row" id="TituloIndex">
            <h1>Tipos De Cuentas</h1>
        </div>

        <div class="row" id="SubtituloIndex">
            <h5>El tipo de cuenta se refiere a como podemos agrupar cuentas. Ejemplo: Prestamos,Tarjetas de credito, etc.</h5>
        </div>
        
        <div class="row" id="Boton-CrearIndex">
            <a asp-action="Crear" class="btn ">Crear Nuevo</a>
        </div>

        <div class="row" id="TablaIndex">
            <table class="table">
                <thead>
                    <tr>
                        <th>Acciones</th>
                        <th>Nombre</th>
                    </tr>
                </thead>
                <tbody id="Reordenable">
                    @foreach (var tipoCuenta in Model)
                    {
                        <tr>
                            <td>
                                <input type="hidden" value="@tipoCuenta.Id" class="ids"/>
                                <a class="btn" id="boton-actualizarIndex" asp-action="Editar" asp-route-id="@tipoCuenta.Id">Editar</a>
                                <a class="btn" id="boton-eliminaindex" asp-action="Borrar" asp-route-id="@tipoCuenta.Id">Eliminar</a>
                            </td>
                            <td>
                                @tipoCuenta.Nombre
                            </td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>
    </div>
</div>

@section scripts{
    <script>
        const urlOrdenar = '@Url.Action("Ordenar")';

        $(function(){
            $("#Reordenable").sortable({
                stop: async function(e, ui){
                    await actualizarOrdenes();
                }
            });

            async function actualizarOrdenes(){
                const ids = obtenerIdsDeElementos()
                await enviarIdsAlBackend(ids);
            }

            function obtenerIdsDeElementos(){
                const ids = $(".ids").map(function(){
                    return $(this).val();
                }).get();

                return ids;
            }

            async function enviarIdsAlBackend(ids){
                var data= JSON.stringify(ids);

                await fetch(urlOrdenar,{
                    method: 'POST',
                    body: data,
                    headers:{
                        'Content-Type': 'application/json'
                    }
                })
            }
            
        })
    </script>
}